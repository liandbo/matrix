#include <stdio.h>
#include <stdlib.h>

//prototype
int readFile(char name_File[20],char s[100][50]);
void outputArray(int n,int m,int array[n][m]);
void convertStringToArray(int a[],char s[100][50],int i);
void convert1D_arrayTo2D_array(int n,int m,int array[n][m],int a[]);
void checkDiagonal(int n,int array[n][n]);
void checkUpper(int n,int array[n][n]);
void mini6(int n,int a[n][n],int b[n][n]);
void WrFile(int n,int a[n][n]);
struct matrix {
  char namefile[10];
  int row,collumn,element;
  char s[100][50];
  int a[20];
  int arrey[100][100];
};

//main
int main(int argc, char const *argv[])
{

    int max=2,a=0;
    struct matrix M[2];
      //M[0].namefile="arrayA.txt";
      //M[1].namefile="arrayB.txt";
    for(int i=0;i<max;i++){
      printf("\nenter name file %d :",i+1 );
        fflush(stdin);
        gets(M[i].namefile);

      printf("input the row of file %d: ",i+1 );
        scanf("%d",&M[i].row );
      printf("input the collumn of file %d: ",i+1 );
        scanf("%d",&M[i].collumn );
      M[i].element=readFile(M[i].namefile,M[i].s);
      printf("\n%d",M[i].element );
      printf("\n" );
      M[i].a[M[i].element];
        convertStringToArray(M[i].a,M[i].s,M[i].element);
        printf("\n" );
      M[i].arrey[M[i].row][M[i].collumn];
        convert1D_arrayTo2D_array(M[i].row,M[i].collumn,M[i].arrey,M[i].a);
        outputArray(M[i].row,M[i].collumn,M[i].arrey);
    }
    printf("Do you want to check Diagonal the first matrix? (Yes:1, No:0)\n");
    scanf("%d",&a);
    if (a==1)
        if (M[0].row != M[0].collumn)
        {
            printf("Not a square matrix!\n");
        }
        else
        {
            checkDiagonal(M[0].row,M[0].arrey);
        }
    a=0;
    printf ("\nDo you want to check a upper triagonal matrix the first matrix? (Yes:1, No:0)\n");
    scanf ("%d",&a);
    if (a==1)
        if (M[0].row != M[0].collumn)
        {
            printf ("not square matrix\n");
        }
        else
        {
            checkUpper(M[0].row, M[0].arrey);
        }
    a=0;
    printf("\nDo you want to add two matrix together? (Yes:1, No:0)\n");
    scanf("%d",&a);
    if (a==1)
        if ((M[0].row != M[0].collumn) || (M[1].row != M[1].collumn))
        {
            printf("Not square matrix!");
        }
        else if ((M[0].row != M[1].row) || (M[0].collumn != M[1].collumn))
        {
            printf("Two matrix not equal.");
        }
        else
        {
            mini6(M[0].row,M[0].arrey,M[1].arrey);
        }
}

//function
int readFile(char name_File[20],char s[100][50]){
  FILE* inp;
  inp = fopen(name_File,"r");		//filename of your data file
  int nPtri=0;
  printf("\nOpen file success" );
  while(1){
      char r = (char)fgetc(inp);
      int k = 0;
          while(r!=',' && !feof(inp)){	//read till , or EOF
              s[nPtri][k++] = r;
              r = (char)fgetc(inp);
                       }
      s[nPtri][k]=0;		            //make last character of string null
      if(feof(inp)){		            //check again for EOF
          break;
      }
      nPtri++;
 }
 fclose(inp);
 return nPtri+1;
}
void convertStringToArray(int a[],char s[100][50],int i){
    printf("the 1D integer array form from the file ");
        for(int j = 0;j<i;j++){
        int d=atof(s[j]);
        a[j]=d;printf("%3d",a[j]);
        }
}
void convert1D_arrayTo2D_array(int n,int m,int array[n][m],int a[]){
    int k=0;
     for(int x=0;x<n;x++){
        for(int c=0;c<m;c++){
            array[x][c]=a[k++];
        }
    }
}
void outputArray(int n,int m,int  array[n][m]){
        for (int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                printf("%3d",array[i][j]);
            }printf("\n");
        }
}
void checkDiagonal(int n,int array[n][n]){
    for(int i=0;i<n;i++){
        for(int j=n-1;j>i;j--){
            if(array[i][j]!=array[j][i]!=0){
                printf("Not diagonal matrix\n");
                return -1;
                break;
            }
        }
    }printf("This is a diagonal matrix.\n");
}
void checkUpper(int n,int array[n][n])
{
    int i,j;
    for(i=2;i<=n;i++)
        for(j=1;j<=(i-1);j++)
            if (array[i][j] != 0)
            {
                printf("Not upper triagonal matrix\n");
                return;
                break;
            }
    printf ("this is an upper triagonal matrix\n");
}
void mini6(int n,int a[n][n],int b[n][n])
{
    int i,j,c[100][100];
    for(i=0;i<n;i++)
        for(j=0;j<n;j++)
            c[i][j]= a[i][j] + b[i][j];
    WrFile(n,c);
}
void WrFile(int n,int a[n][n])
{
    int i,j;
    FILE* ip;
    ip = fopen("save.txt","r");
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            fprintf(ip,"%d",a[i][j]);
            fprintf(ip,",");
        }
        fprintf(ip,"\n");
    }
    fclose(ip);
    printf("Done\n");

}
